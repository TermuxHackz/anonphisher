#!bin/bash
#This is the setup script for anonphisher
#Created by AnonyminHack5
#Contact me: AnonyminHack5@protonmail.com
#Whatsapp: +2349033677589

cls || clear
clear='\033[0m'       # Text Reset
clr='\033[0m'
# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

banner() {                                               
printf "\e[1;31m  _____                 _   _     _            \e[0m\n"       
printf "\e[1;32m |  _  |___ ___ ___ ___| |_|_|___| |_ ___ ___   \e[0m\n"
printf "\e[1;33m |     |   | . |   | . |   | |_ -|   | -_|  _|  \e[0m\n"
printf "\e[1;34m |__|__|_|_|___|_|_|  _|_|_|_|___|_|_|___|_|    \e[0m\n"
printf "\e[1;35m                   |_| [51+ phishing templates] \e[0m\n"
printf "\n"
} 
banner
printf "\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Installing Packages ....\e[0m\n"
sleep 2
echo ""
smallbanner() {
	printf "\e[1;34m\tInstall the packages for your Terminal \e[0m\n\n"
	printf "\e[1;34m\t\t[\e[0m\e[1;77m01\e[0m\e[1;34m]\e[0m\e[1;93mTermux\e[0m\n"
printf "\e[1;34m\t\t[\e[0m\e[1;77m02\e[0m\e[1;34m]\e[0m\e[1;93mLinux\e[0m\n"
printf "\e[1;34m\t\t[\e[0m\e[1;77m03\e[0m\e[1;34m]\e[0m\e[1;93mUbuntu\e[0m\n"
read -p $'\n\e[1;92m[\e[0m\e[1;77m*\e[0m\e[1;92m] Choose your terminal: \e[0m\en' terminal

if [[ $terminal == "1" || $terminal == "01" ]]; then
printf "\e[1;94mYou have choosen Termux as your current terminal packages for Termux will Start to install... \e[0m\n"
sleep 3
clear || cls
pkg update
pkg upgrade
pkg install openssh-server
pkg install curl
pkg install php
pkg install ssh
pkg install unzip
pkg install wget
pkg install lolcat
pip install lolcat
sleep 2
cls || clear
printf "\e[1;33m[\e[0m\e[1;37m*\e[0m\e[1;33m]\e[0m\e[1;40m Packages for Termux has been fully installed. Thank you! \e[0m\e[1;33m[\e[0m\e[1;37m*\e[0m\e[1;33m]\e[0m\n"

elif [[ $terminal == "02" || $terminal == "2" ]]; then
printf "\e[1;94mYou have choosen Linux as your current terminal packages for Linux will Start to install... \e[0m\n"
sleep 3
clear || cls 
sudo apt-get update
sudo apt-get upgrade -y
sudo apt-get -y install ssh
sudo apt-get -y install curl
sudo apt-get -y install php
sudo apt-get -y install unzip
sudo apt-get -y install openssh-server
sudo pip install lolcat
sleep 2
installdependencies() {
                xterm -T 'Update' -geometry 90x26+1000 -e 'apt update' > /dev/null 2>&1 &
                pid0=$!
                wait $pid0
                    pkgs='php'
                    if ! dpkg -s $pkgs >/dev/null 2>&1; then
                        xterm -T 'Installer' -geometry 90x26+1000  -e 'apt install '${pkgs} > /dev/null 2>&1 &
                        pid1=$!
                        wait $pid1
                    else
                        sleep 1
                        printf "${BCyan}[🪝] ${pkgs} ${BGreen}Installed${clr}\n"
                    fi

                    pkgs='wget'
                    if ! dpkg -s $pkgs >/dev/null 2>&1; then
                        xterm -T 'Installer' -geometry 90x26+1000  -e 'apt install '${pkgs} > /dev/null 2>&1 &
                        pid2=$!
                        wait $pid2
                    else
                        sleep 1
                        printf "${BCyan}[🪝] ${pkgs} ${BGreen}Installed${clr}\n"
                    fi

                    pkgs='unzip'
                    if ! dpkg -s $pkgs >/dev/null 2>&1; then
                        xterm -T 'Installer' -geometry 90x26+1000  -e 'apt install '${pkgs} > /dev/null 2>&1 &
                        pid3=$!
                        wait $pid3
                    else
                        sleep 1
                        printf "${BCyan}[🪝] ${pkgs} ${BGreen}Installed${clr}\n"
                    fi

                    pkgs='curl'
                    if ! dpkg -s $pkgs >/dev/null 2>&1; then
                        xterm -T 'Installer' -geometry 90x26+1000  -e 'apt install '${pkgs} > /dev/null 2>&1 &
                        pid4=$!
                        wait $pid4
                    else
                        sleep 1
                        printf "${BCyan}[🪝] ${pkgs} ${BGreen}Installed${clr}\n"
                    fi

                    pkgs='npm'
                    if ! dpkg -s $pkgs >/dev/null 2>&1; then
                        xterm -T 'Installer' -geometry 90x26+1000  -e 'apt install '${pkgs} > /dev/null 2>&1 &
                        pid5=$!
                        wait $pid5
                    else
                        sleep 1
                        printf "${BCyan}[🪝] ${pkgs} ${BGreen}Installed${clr}\n"
                    fi
                    
                    pkgs='xterm'
                    if ! dpkg -s $pkgs >/dev/null 2>&1; then
                        xterm -T 'Update' -geometry 90x26+1000 -e 'apt install '${pkgs} > /dev/null 2>&1 &
                        pid6=$!
                        wait $pid6
                    else
                        sleep 1
                        printf "${BCyan}[🪝] ${pkgs} ${BGreen}Installed${clr}\n"
                    fi

                #command -v rkhunter > /dev/null 2>&1 || { echo >&2 "${Red}Installing rkhunter."; xterm -T 'Installer' -geometry 90x26+0+0 -hold -e 'apt install rkhunter' > /dev/null 2>&1 &; exit 1; }
                #command -v php > /dev/null 2>&1 || { echo >&2 "${Red}Installing php."; apt-get install php -y; exit 1; }
                #command -v wget > /dev/null 2>&1 || { echo >&2 "${Red}Installing wget."; apt-get install wget -y; exit 1; }
                #command -v unzip > /dev/null 2>&1 || { echo >&2 "${Red}Installing unzip."; apt-get install wget -y; exit 1; }
                #command -v curl > /dev/null 2>&1 || { echo >&2 "${Red}Installing curl."; apt-get install curl -y; exit 1; }
                #command -v lt > /dev/null 2>&1 || { echo >&2 "${Red}Installing localtunnel."; apt-get install npm -y; sleep 2; npm install -g localtunnel;  exit 1; }
                #command -v ngrok > /dev/null 2>&1 || { echo >&2 "${Red}Download NGROK from Official site."; exit 1; }
                #printf "\n"
                #printf "${BGreen}Version ${version}"
                exit 0
                }
printf "\e[1;94mRequired Packages will begin to install for Linux .. \e[0m\n"				
sleep 2
cls || clear
installdependencies
printf "\e[1;33m[\e[0m\e[1;37m*\e[0m\e[1;33m]\e[0m\e[1;40m Packages for Linux has been fully installed. Thank you! \e[0m\e[1;33m[\e[0m\e[1;37m*\e[0m\e[1;33m]\e[0m\n"

elif [[ $terminal == "3" || $terminal == "03" ]]; then
printf "\e[1;94mYou have choosen Ubuntu as your current terminal packages for Ubuntu will Start to install... \e[0m\n"
sleep 3
clear || cls 
sudo apt update
sudo apt upgrade 
sudo apt install ssh
sudo apt install curl
sudo apt install php
sudo apt install unzip
sudo apt install openssh-server
sleep 2
cls || clear
printf "\e[1;33m[\e[0m\e[1;37m*\e[0m\e[1;33m]\e[0m\e[1;40m Packages for Ubuntu has been fully installed. Thank you! \e[0m\e[1;33m[\e[0m\e[1;37m*\e[0m\e[1;33m]\e[0m\n"
 
else 
printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Sorry, lol thats not in the option 😂....open up your eyes..!!. \e[0m\e[1;91m[\e[0m\e[1;97m~\e[0m\e[1;91m]\e[0m\n"
sleep 3
clear || cls
banner
smallbanner
fi
} 
smallbanner
printf "\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Setting Up Environment ....\e[0m\n"
if [[ -d .termuxhackz ]]; then
printf ""
else
mkdir .termuxhackz
fi
if [[ -d logs ]]; then
printf ""
else
mkdir logs
mkdir .cld.log
fi
if [[ -e sites.zip ]]; then
unzip -qq sites.zip
rm sites.zip
fi
if [[ -e .termuxhackz/ngrok ]]; then
printf ""
else
arch=$(uname -a | grep -o 'arm' | head -n1)
arch2=$(uname -a | grep -o 'Android' | head -n1)
if [[ $arch == *'arm'* ]] || [[ $arch2 == *'Android'* ]] ; then
curl -LO https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip > /dev/null 2>&1
if [[ -e ngrok-stable-linux-arm.zip ]]; then
unzip ngrok-stable-linux-arm.zip > /dev/null 2>&1
mv ngrok .termuxhackz
rm -rf ngrok-stable-linux-arm.zip
chmod +x .termuxhackz/ngrok
else
printf "\n \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;93m Error \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;96m Install Ngrok Manually.\e[0m\n"
exit 1
fi
else
curl -LO https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip > /dev/null 2>&1 
if [[ -e ngrok-stable-linux-386.zip ]]; then
unzip ngrok-stable-linux-386.zip > /dev/null 2>&1
mv ngrok .termuxhackz
rm -rf ngrok-stable-linux-386.zip
chmod +x .termuxhackz/ngrok
else
printf "\n \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;93m Error \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;96m Install Ngrok Manually.\e[0m\n"
exit 1
fi
fi
fi
if [[ -e .termuxhackz/loclx ]]; then
printf ""
else
archa=$(uname -a | grep -o 'arm' | head -n1)
arch2a=$(uname -a | grep -o 'Android' | head -n1)
if [[ $archa == *'arm'* ]] || [[ $arch2a == *'Android'* ]] ; then
curl -LO https://lxpdownloads.sgp1.digitaloceanspaces.com/cli/loclx-linux-arm.zip > /dev/null 2>&1
if [[ -e loclx-linux-arm.zip ]]; then
unzip loclx-linux-arm.zip > /dev/null 2>&1
mv loclx .termuxhackz
rm -rf loclx-linux-arm.zip
chmod +x .termuxhackz/loclx
else
printf "\n \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;93m Error \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;96m Install LocalXpose Manually.\e[0m\n"
exit 1
fi
else
curl -LO https://lxpdownloads.sgp1.digitaloceanspaces.com/cli/loclx-linux-386.zip > /dev/null 2>&1 
if [[ -e loclx-linux-386.zip ]]; then
unzip loclx-linux-386.zip > /dev/null 2>&1
mv loclx .termuxhackz
rm -rf loclx-linux-386.zip
chmod +x .termuxhackz/loclx
else
printf "\n \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;93m Error \e[1;31m[\e[0m\e[1;77m!\e[0m\e[1;31m]\e[0m\e[1;96m Install LocalXpose Manually.\e[0m\n"
exit 1
fi
fi
fi
if [[ -d ~/.ssh ]]; then
printf ""
else
mkdir ~/.ssh
fi
chmod +x anonphisher.sh
printf "|1|SVjtt9mtL4P/5lsqaielF1pJHvM=|6QmJXxfPd9A5uUaFI1RV2H4brTs= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3lJnhW1oCXuAYV9IBdcJA+Vx7AHL5S/ZQvV2fhceOAPgO2kNQZla6xvUwoE4iw8lYu3zoE1KtieCU9yInWOVI6W/wFaT/ETH1tn55T2FVsK/zaxPiHZVJGLPPdEEid0vS2p1JDfc9onZ0pNSHLl1QusIOeMUyZ2bUMMLLgw46KOT9S3s/LmxgoJ3PocVUn5rVXz/Dng7Y8jYNe4IFrZOAUsi7hNBa+OYja6ceefpDvNDEJ1BdhbYfGolBdNA7f+FNl0kfaWru4Cblr843wBe2ckO/sNqgeAMXO/qH+SSgQxUXF2AgAw+TGp3yCIyYoOPvOgvcPsQziJLmDbUuQpnH\n|1|PiraXMKgzzt9DdPRSLAtRvRad0Y=|2W162QXfHJvKKZWIaRyZO6VFWJI= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC3lJnhW1oCXuAYV9IBdcJA+Vx7AHL5S/ZQvV2fhceOAPgO2kNQZla6xvUwoE4iw8lYu3zoE1KtieCU9yInWOVI6W/wFaT/ETH1tn55T2FVsK/zaxPiHZVJGLPPdEEid0vS2p1JDfc9onZ0pNSHLl1QusIOeMUyZ2bUMMLLgw46KOT9S3s/LmxgoJ3PocVUn5rVXz/Dng7Y8jYNe4IFrZOAUsi7hNBa+OYja6ceefpDvNDEJ1BdhbYfGolBdNA7f+FNl0kfaWru4Cblr843wBe2ckO/sNqgeAMXO/qH+SSgQxUXF2AgAw+TGp3yCIyYoOPvOgvcPsQziJLmDbUuQpnH\n" > ~/.ssh/known_hosts
printf "\e[0m\n"
printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Installation Completed !! \e[0m\n"
printf "\e[0m\n"
sleep 2
printf "\e[0m\e[1;91m [\e[1;97m~\e[1;91m]\e[1;93m Type \e[1;96mbash install.sh \e[1;93mto run INSTALL.SH FILE !!\e[0m\n"
printf "\e[0m\n"
printf "\e[0m\n" 